/* You can add global styles to this file, and also import other style files */
@import 'tailwindcss';

:root {
  --animate-fade-in: fadeIn 0.5s ease-out;
  --animate-scale-in: scaleIn 0.5s ease-out;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    backdrop-filter: blur(0px);
  }
  100% {
    opacity: 1;
    backdrop-filter: blur(8px);
  }
}

@keyframes scaleIn {
  0% {
    transform: scale(0.92);
    opacity: 0;
    box-shadow: 0 10px 25px -5px rgba(16, 185, 129, 0);
  }
  100% {
    transform: scale(1);
    opacity: 1;
    box-shadow: 0 10px 25px -5px rgba(16, 185, 129, 0.2);
  }
}

@keyframes modalFadeIn {
  from {
    background-color: rgba(10, 83, 63, 0);
    backdrop-filter: blur(0px);
    opacity: 0;
  }
  to {
    background-color: rgba(10, 83, 63, 0.7);
    backdrop-filter: blur(8px);
    opacity: 1;
  }
}

@keyframes modalFadeOut {
  from {
    background-color: rgba(10, 83, 63, 0.7);
    backdrop-filter: blur(8px);
    opacity: 1;
  }
  to {
    background-color: rgba(10, 83, 63, 0);
    backdrop-filter: blur(0px);
    opacity: 0;
  }
}

@keyframes modalSlideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes modalSlideOut {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(20px);
    opacity: 0;
  }
}

.modal-open {
  animation: modalFadeIn 0.5s forwards;
  opacity: 0;
  backdrop-filter: blur(0);
}

.modal-close {
  animation: modalFadeOut 0.5s forwards;
}

.card-open {
  animation: modalSlideIn 0.5s 0.1s forwards;
  transform: translateY(20px);
  opacity: 0;
}

.card-close {
  animation: modalSlideOut 0.5s forwards;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
  body {
    background: linear-gradient(to bottom right, #052d1b, #0b3d2a, #052d1b);
    min-height: 100vh;
    font-family: 'Poppins', sans-serif;
    font-size: 16px;
    line-height: 1.5;
    letter-spacing: 0.015em;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: 600;
    line-height: 1.3;
  }

  button,
  input,
  select,
  textarea {
    font-family: inherit;
  }

  /* Radio button custom styling */
  [type='radio'] {
    -webkit-appearance: none !important;
    -moz-appearance: none !important;
    appearance: none !important;
    background-color: #1f2937 !important;
    border: 1px solid #4b5563 !important;
    border-radius: 50% !important;
    width: 1.25rem !important;
    height: 1.25rem !important;
    display: inline-block !important;
    position: relative !important;
    cursor: pointer !important;
    vertical-align: middle !important;
  }

  [type='radio']:checked {
    border-color: #10b981 !important; /* emerald-500 */
  }

  [type='radio']:checked::after {
    content: '' !important;
    display: block !important;
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    width: 0.625rem !important;
    height: 0.625rem !important;
    background-color: #10b981 !important; /* emerald-500 */
    border-radius: 50% !important;
  }

  [type='radio']:focus {
    outline: none !important;
    box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.5) !important; /* emerald-500 with opacity */
  }
}
